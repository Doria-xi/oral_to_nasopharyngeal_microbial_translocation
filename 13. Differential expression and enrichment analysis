# Differential expression analysis
library(edgeR)

counts <- read.table("counts.txt", header = TRUE, row.names = 1)
genes <- read.table("genes.txt", header = TRUE, row.names = 1)
group <- read.table("group.txt", header = TRUE, row.names = 1)

DGEList <- DGEList(counts =counts,
                   genes = genes,
                   group = group)

keep <- rowSums(cpm(DGEList) > 1) >= 3
DGEList <- DGEList[keep, , keep.lib.sizes=FALSE]

DGEList <- calcNormFactors(DGEList)

design <- model.matrix(~group)

dispersion <- estimateDisp(DGEList, design, robust = TRUE)

fit <- glmFit(dispersion, design, robust = TRUE)
lrt <- glmLRT(fit)

deGenes <- decideTestsDGE(lrt, p = 0.05, lfc = 1)
summary(deGenes)

gene_diff <- topTags(lrt, n = nrow(DGEList$counts))[["table"]]
gene_diff <- gene_diff[order(gene_diff$FDR, gene_diff$logFC, decreasing = c(FALSE, TRUE)), ] #按 FDR 值升序排序，相同 FDR 值下继续按 log2FC 降序排序

# Pathway enrichment analysis
library(clusterProfiler)
library(org.Hs.eg.db)
library(splitstackshape)
library(R.utils)
R.utils::setOption("clusterProfiler.download.method","auto")
library(dplyr)
library(enrichplot)

gene_sigdiff <-read.table("gene_sigdiff.txt", header = TRUE, sep = "\t")

gene <- bitr(gene_sigdiff, 
             fromType="ENSEMBL", 
             toType=c("SYMBOL", "ENTREZID"), 
             OrgDb="org.Hs.eg.db")

## GO enrichment
ego <- enrichGO(gene = gene$ENTREZID, OrgDb = org.Hs.eg.db, ont = "All", pAdjustMethod = "BH", pvalueCutoff = 0.05, qvalueCutoff = 0.05, readable = TRUE)

## KEGG pathyway enrichment
kk <- enrichKEGG(gene = gene$ENTREZID, organism = "hsa", pAdjustMethod = "BH", qvalueCutoff = 0.05)

# Analysis of cell types enrichment score
library(GSVA)

data_group <- read.table("group.txt", header = TRUE, row.names = 1)
data_gene <- read.table("counts.txt", header = TRUE, row.names = 1)
gene_set <- read.csv("Geneset_pre.csv", header = TRUE) 
# The gene_set for cell types were downloaded from Charoentong, P. et al. Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade. Cell reports 18, 248-262, doi:10.1016/j.celrep.2016.12.019 (2017)
genesetlist <- split(as.matrix(gene_set)[,1],gene_set[,2])
genesetlist

gsva_matrix <- gsva(as.matrix(data_gene), genesetlist, method = "ssgsea", kcdf = "Poisson", abs.ranking = TRUE)

gsva_matrix1<- t(scale(t(gsva_matrix)))

normalization<-function(x){return((x-min(x))/(max(x)-min(x)))}

nor_gsva_matrix1 <- normalization(gsva_matrix1)
